DECKBAG_GUID = "6b5ba3"
DIE_GUID = "552cdf"

completePlayers = {}

function deal()
    startLuaCoroutine(self, "dealCoroutine")
end

function dealCoroutine()
    completePlayers = {}
    local bag = getObjectFromGUID(DECKBAG_GUID)
    bag.shuffle()
    local boards = {}
    for _, playerColor in ipairs(getSeatedPlayers()) do
        local rot = Player[playerColor].getHandTransform().rotation
        local pos = Player[playerColor].getHandTransform().position
        -- ボードの出現高度
        pos.y = 1

        -- ボードz軸のオフセット
        local zOffset = 6
        if rot.y < 179 then
            pos.z = pos.z + zOffset
        else
            pos.z = pos.z - zOffset
        end

        -- 上下逆なのでひっくり返す
        rot.y = rot.y + 180
        bag.takeObject(
            {
                position = pos,
                rotation = rot,
                callback_function = function(board)
                    table.insert(boards, board)
                end
            }
        )
    end

    wait(0.75)

    broadcastToAll("Ready")
    wait(0.5)
    broadcastToAll("Set")
    wait(0.5)
    getHost().pingTable({x = 0, y = -2, z = 0})
    broadcastToAll("GO!")

    gameStart = os.clock()

    for _, board in ipairs(boards) do
        board.flip()
    end

    wait(0.1)

    for _, board in ipairs(boards) do
        local pos_current = board.getPosition()
        board.setPositionSmooth({x = pos_current.x, y = 1, z = pos_current.z}, false, true)
        board.lock()
    end

    UI.setAttribute("ubongo_button", "interactable", "true")

    return 1
end

function ubongo_clicked(player, value, id)
    -- 既に宣言しているかのチェック
    local flag = false
    for i, completePlayer in ipairs(completePlayers) do
        if player.color == completePlayer.color then
            flag = true
        end
    end

    if flag then
        broadcastToColor("あなたは既に申告済みです！", player.color)
        return
    end

    local time = os.clock() - gameStart

    local rank = 1
    for i, value in ipairs(completePlayers) do
        rank = rank + 1
    end

    printToAll(string.format("%d位 %s: %.2f秒", rank, player.steam_name, time))

    table.insert(
        completePlayers,
        {
            color = player.color,
            time = time,
            rank = rank
        }
    )
    checkRoundIsOver()
end

function checkRoundIsOver()
    local playerCount = 0
    for i, v in ipairs(getSeatedPlayers()) do
        playerCount = playerCount + 1
    end

    local completePlayerCount = 0
    for i, v in ipairs(completePlayers) do
        completePlayerCount = completePlayerCount + 1
    end

    if completePlayerCount >= playerCount then
        broadcastToAll("Game is Over!")
        roundOver()
    end
end

function roundOver()
    -- TODO
end

function getHost()
    local players = Player.getPlayers()
    for _, player in ipairs(players) do
        if player.host then
            return player
        end
    end
end
